name: Release

on:
  pull_request:
  push:
    tags:
      - "*"

permissions:
  contents: write
  actions: read

concurrency:
  group: "release"
  cancel-in-progress: true

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          fetch-depth: 0

      - name: Install bsdtar
        run: sudo apt-get install -y bsdtar

      - name: Get Documentation Run ID
        id: run_id
        run: |
          run_id="$(gh api -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -q '[ .workflow_runs[].id ] | max' \
            /repos/${{ github.repository_owner }}/gizmo-platform.github.io/actions/runs)"
          echo "run_id=$run_id" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Download Documentation
        uses: actions/download-artifact@v4
        with:
          repository: "${{ github.repository_owner }}/gizmo-platform.github.io"
          name: github-pages
          path: pkg/docs/mdbook/book/
          github-token: ${{ github.token }}
          run-id: ${{ steps.run_id.outputs.run_id }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GENERATE_EXTRA_ARGS: '-skip mdbook'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: goreleaser
          path: dist
          if-no-files-found: error

  build:
    runs-on: ubuntu-latest
    needs: goreleaser
    strategy:
      matrix:
        image:
          - driver-station
          - ds-ramdisk
          - fms
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: goreleaser
          path: dist

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build Image
        run: sudo sh -x .release/build.sh ${{ matrix.image }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: image-${{ matrix.image }}
          path: ${{ matrix.image }}.zip
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/driver-station.zip
            dist/fms.zip
            dist/ds-ramdisk.zip
          generate_release_notes: false
          fail_on_unmatched_files: true
